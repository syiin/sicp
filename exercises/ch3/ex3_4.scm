(define (make-account amnt passwd)
  (let ((amount amnt)
        (password passwd)
        (tries 0))
  (lambda (p cmd) 
    (cond ((not (eq? p password)) (lambda (x) (if (< tries 7)
                                                (begin (set! tries (+ tries 1)) "Incorrect password")
                                                "Call the police!")))
          ((eq? cmd 'withdraw) (lambda (x) (begin (set! amount (- amount x)) amount)))
          ((eq? cmd 'deposit) (lambda (x) (begin (set! amount (+ amount x)) amount)))
    ))
  )
)

(define acc (make-account 100 'secret-password))
((acc 'secret-password 'withdraw) 40)

((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)